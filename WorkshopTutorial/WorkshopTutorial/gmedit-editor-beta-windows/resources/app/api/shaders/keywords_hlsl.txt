if
then
else
while
do
for
break
continue
until
repeat
return
switch
case
default
var
globalvar
enum
void
const
bool
int
void
struct
volatile
extern
vector
uniform
out
double
return
in
half
float
float2
float3
float4
float4x4
float3x3
float2x2
sampler
sampler2D
sampler3D
samplerCUBE
BINORMAL0
BINORMAL1
BINORMAL2
BINORMAL3
BINORMAL4
BINORMAL5
BINORMAL6
BINORMAL7
BLENDINDICES0
BLENDINDICES1
BLENDINDICES2
BLENDINDICES3
BLENDWEIGHT0
BLENDWEIGHT1
BLENDWEIGHT2
BLENDWEIGHT3
COLOR
COLOR0
COLOR1
COLOR2
COLOR3
NORMAL
NORMAL0
NORMAL1
NORMAL2
NORMAL3
NORMAL4
NORMAL5
NORMAL6
NORMAL7
POSITION
POSITION0
POSITION1
POSITION2
POSITION3
POSITIONT
PSIZE
PSIZE0
PSIZE1
PSIZE2
PSIZE3
TANGENT0
TANGENT1
TANGENT2
TANGENT3
TEXCOORD0
TEXCOORD1
TEXCOORD2
TEXCOORD3
TEXCOORD4
TEXCOORD5
TEXCOORD6
TEXCOORD7
FOG
VFACE
VPOS
DEPTH
DEPTH0
DEPTH1
DEPTH2
DEPTH3
register
packoffset
#region
#endregion
uint
snorm
unorm
precise
shared
extern
nointerpolation
static
groupshared
volatile
column_major
row_major
dword
min16float
min10float
min16int
min12int
min16uint
matrix
typedef
SV_Position
SV_Position0
SV_Position1
SV_Position2
SV_Position3
SV_ClipDistance
SV_CullDistance
SV_Coverage
SV_Depth
SV_InnerCoverage
SV_InstanceID
SV_IsFrontFace
SV_PrimitiveID
SV_RenderTargetArrayIndex
SV_SampleIndex
SV_StencilRef
SV_Target
SV_Target0
SV_Target1
SV_Target2
SV_Target3
SV_VertexID
SV_ViewportArrayIndex
cbuffer
Texture1D
Texture2D
Texture3D
SamplerState
#if
#include
#define
discard
uint2
uint3
uint4
int2
int3
int4
int1
float1
#else
#undef
#ifndef
#ifdef
#endif
inline
interface
class
half
half1
half2
half3
half4
bool1
bool2
bool3
bool4
[unroll]
[loop]
[branch]
[fastopt]
[allow_uav_condition]
[flatten]
[forcecase]
[call]
string
uint1
uint2
uint3
uint4
inout
min10float2
min10float3
min10float4
min12int2
min12int3
min12int4
min16float2
min16float3
min16float4
min16int2
min16int3
min16int4
min16uint2
min16uint3
min16uint4
